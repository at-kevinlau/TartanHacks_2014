var initNodes = [{"courseId":"18051","treeType":"OR","nodeId":0,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"Students are encouraged to various international collaborative programs offered through the department of Electrical and Computer Engineering.","title":"Study Abroad"},{"courseId":"18100","treeType":"OR","nodeId":1,"isStarter":true,"prereqIndices":[2],"postreqIndices":[9,12,14],"prereqLinks":[0],"postreqLinks":[5,8,10],"description":"The goals of this freshman engineering course are: * To introduce basic concepts in electrical and computer engineering in an integrated manner; * To motivate basic concepts in the context of real applications; * To illustrate a logical way of thinking about problems and their solutions, and; * To convey the excitement of the profession. These goals are attained through analysis, construction and testing of an electromechanical system (e.g., a robot) that incorporates concepts from a broad range of areas within Electrical and Computer Engineering. Some of the specific topics that will be covered include system decomposition, ideal and real sources, Kirchhoff\u0027s Current and Voltage Laws, Ohm\u0027s Law, piecewise linear modeling of nonlinear circuit elements, Ideal Op-Amp characteristics, combinational logic circuits, Karnaugh Maps, Flip-Flops, sequential logic circuits, and finite state machines. 3 hrs. lec., 1 hr. rec., 3 hr. lab.","title":"Introduction to Electrical and Computer Engineering"},{"courseId":"21120","treeType":"OR","nodeId":2,"isStarter":true,"prereqIndices":[],"postreqIndices":[1,27],"prereqLinks":[],"postreqLinks":[0,23],"description":"","title":""},{"courseId":"18202","treeType":"OR","nodeId":3,"isStarter":true,"prereqIndices":[4,5,6],"postreqIndices":[9,14],"prereqLinks":[1,2,3],"postreqLinks":[6,11],"description":"This course covers topics from engineering mathematics that serve as foundations for descriptions of electrical engineering devices and systems. It is the corequisite mathematics course for 18-220, Fundamentals of Electrical Engineering. The topics include: (1) MATLAB as a robust computational tool, used to reinforce, enrich and integrate ideas throughout the course, including software exercises and projects in combination with homework assignments, (2) Complex Analysis, including rectangular and polar representations in the complex plane with associated forms of complex arithmetic, powers, roots and complex logarithms, complex differentiation, analytic functions and Cauchy-Riemann equations, complex Taylor series, complex exponential, sinusoidal and hyperbolic functions, and Euler\u0027s formula, (3) Fourier Analysis, including orthogonality of sinusoids, trigonometric and exponential forms of Fourier series, Fourier integrals and Fourier transforms, (4) Linear, Constant-Coefficient Differential Equations, including complex exponential solutions to homogeneous equations and particular solutions with polynomial and sinusoidal driving functions described by phasors, (5) Difference Equations, with emphasis upon their relationship to differential equations, and (6) Linear Algebra and Matrices, including matrix arithmetic, linear systems of equations and Gaussian elimination, vector spaces and rank of matrices, matrix inverses and determinants, eigenvalue problems and their relationship to systems of homogeneous differential equations. 4 hrs. lec., 1hr. rec.","title":"Mathematical Foundations of Electrical Engineering"},{"courseId":"21122","treeType":"OR","nodeId":4,"isStarter":true,"prereqIndices":[],"postreqIndices":[3,27],"prereqLinks":[],"postreqLinks":[1,24],"description":"","title":""},{"courseId":"21118","treeType":"OR","nodeId":5,"isStarter":true,"prereqIndices":[],"postreqIndices":[3],"prereqLinks":[],"postreqLinks":[2],"description":"","title":""},{"courseId":"21123","treeType":"OR","nodeId":6,"isStarter":true,"prereqIndices":[],"postreqIndices":[3],"prereqLinks":[],"postreqLinks":[3],"description":"","title":""},{"courseId":"18213","treeType":"OR","nodeId":7,"isStarter":true,"prereqIndices":[8],"postreqIndices":[18,23,37,105,131],"prereqLinks":[4],"postreqLinks":[18,20,34,147,181],"description":"This course provides a programmer\u0027s view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required. Topics covered include: machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, networking technology and protocols, and supporting concurrent computation. NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course. Prerequisites: 15-123 (Grade of C or higher is required in the prerequisite)","title":"Introduction to Computer Systems"},{"courseId":"15122","treeType":"OR","nodeId":8,"isStarter":true,"prereqIndices":[],"postreqIndices":[7],"prereqLinks":[],"postreqLinks":[4],"description":"","title":""},{"courseId":"18220","treeType":"OR","nodeId":9,"isStarter":true,"prereqIndices":[1,3,10],"postreqIndices":[15,31,121],"prereqLinks":[5,6,7],"postreqLinks":[12,27,168],"description":"This course covers fundamental topics that are common to a wide variety of electrical engineering devices and systems. The topics include an introduction to semiconductor devices and technology, DC circuit analysis techniques, operational amplifiers, energy storage elements, sinusoidal steady-state response, frequency domain analysis, filters, and transient response of first- and second-order systems. The laboratories allow students to use modern electronic instrumentation and to build and operate circuits that address specific concepts covered in the lectures, including semiconductor devices and sensors, layout, operational amplifiers, filters, signal detection and processing, power converters and circuit transients. 3 hrs. lec., 1 hr. rec., 3 hrs. lab.","title":"Electronic Devices and Analog Circuits"},{"courseId":"33107","treeType":"OR","nodeId":10,"isStarter":true,"prereqIndices":[],"postreqIndices":[9],"prereqLinks":[],"postreqLinks":[7],"description":"","title":""},{"courseId":"18232","treeType":"OR","nodeId":11,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"The Department of Electrical and Computer Engineering at Carnegie Mellon considers experiential learning opportunities important educational options for its undergraduate students. One such option is conducting undergraduate research with a faculty member. Students do not need to officially register for undergraduate research unless they want it listed on their official transcripts. An ECE student who is involved in a research project and is interested in registering this undergraduate research for course credit on the official transcript may request to be enrolled in this course. To do this, the student should first complete the on-line undergraduate research form available on the ECE undergraduate student page. Once the form has been submitted and approved by the faculty member the student is conducting the research with, the ECE Undergraduate Office will add the course to the student\u0027s schedule. Typical credit is granted as one hour of research per week is equal to one unit of credit.","title":"Sophomore Projects"},{"courseId":"18240","treeType":"OR","nodeId":12,"isStarter":true,"prereqIndices":[1,13],"postreqIndices":[17,23,34,36,113,116],"prereqLinks":[8,9],"postreqLinks":[13,19,30,32,158,162],"description":"This course introduces basic issues in design and verification of modern digital systems. Topics include: Boolean algebra, digital number systems and computer arithmetic, combinational logic design and simplification, sequential logic design and optimization, register-transfer design of digital systems, basic processor organization and instruction set issues, assembly language programming and debugging, and a hardware description language. Emphasis is on the fundamentals: the levels of abstraction and hardware description language methods that allow designers to cope with hugely complex systems, and connections to practical hardware implementation problems. Students will use computer-aided digital design software and actual hardware implementation laboratories to learn about real digital systems. 3 hr. lec., 1 hr. rec., 3 hr. lab.","title":"Structure and Design of Digital Systems"},{"courseId":"21127","treeType":"OR","nodeId":13,"isStarter":true,"prereqIndices":[],"postreqIndices":[12],"prereqLinks":[],"postreqLinks":[9],"description":"","title":""},{"courseId":"18290","treeType":"OR","nodeId":14,"isStarter":true,"prereqIndices":[1,3],"postreqIndices":[32,50,119,120],"prereqLinks":[10,11],"postreqLinks":[28,50,166,167],"description":"This course develops the mathematical foundation and computational tools for processing continuous-time and discrete-time signals in both time and frequency domain. Key concepts and tools introduced and discussed in this class include linear time-invariant systems, impulse response, frequency response, convolution, filtering, sampling, and Fourier transform. Efficient algorithms like the fast Fourier transform (FFT) will be covered. The course provides background to a wide range of applications including speech, image, and multimedia processing, bio and medical imaging, sensor networks, communication systems, and control systems. This course serves as entry and prerequisite for any higher level course in the fields of signal processing, communications, and control. Prerequisite(s): 18-100 Corequisite(s): 18-202","title":"Signals and Systems"},{"courseId":"18310","treeType":"OR","nodeId":15,"isStarter":true,"prereqIndices":[9],"postreqIndices":[54,55,58,80,81],"prereqLinks":[12],"postreqLinks":[57,60,69,117,118],"description":"This course replaced 18311 in Spring 2005. In this course you will receive an introduction to the operation and fabrication of the most important semiconductor devices used in integrated circuit technology together with device design and layout. At the end of the course you will have a basic understanding of pn diodes, bipolar transistors, and MOSFETs as well as some light emitting and light detecting devices such as photodiodes, LEDs and solar cells. You will also receive an introduction to the fundamental concepts of semiconductor physics such as doping, electron and hole transport, and band diagrams. In the laboratory you will learn how to lay out both bipolar and MOS devices and you will design small (2-3 transistor) circuits. The laboratory portion of the course emphasizes the relation between device design and layout and circuit performance. You will also experimentally evaluate the operation of amplifier and gate circuits fabricated with discrete devices. This course will give you an excellent understanding of the operation and fabrication of the devices which is necessary for high-performance analog and digital circuit design. 3 hrs. lec. (Note: the prerequisite is typically waived for MSE students who intend to pursue the Electronic Materials Minor.)","title":"Fundamentals of Semiconductor Devices"},{"courseId":"18332","treeType":"OR","nodeId":16,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"The Department of Electrical and Computer Engineering at Carnegie Mellon considers experiential learning opportunities important educational options for its undergraduate students. One such option is conducting undergraduate research with a faculty member. Students do not need to officially register for undergraduate research unless they want it listed on their official transcripts. An ECE student who is involved in a research project and is interested in registering this undergraduate research for course credit on the official transcript may request to be enrolled in this course. To do this, the student should first complete the on-line undergraduate research form available on the ECE undergraduate student page. Once the form has been submitted and approved by the faculty member the student is conducting the research with, the ECE Undergraduate Office will add the course to the student\u0027s schedule. Typical credit is granted as one hour of research per week is equal to one unit of credit.","title":"Junior Projects"},{"courseId":"18340","treeType":"OR","nodeId":17,"isStarter":true,"prereqIndices":[12],"postreqIndices":[40,61,103,117],"prereqLinks":[13],"postreqLinks":[37,76,142,164],"description":"In this course we will explore the techniques for designing high-performance digital circuits for computation along with methods for evaluating their properties. We begin by quickly reviewing number systems and digital arithmetic along with basic arithmetic circuits such as ripple-carry adders. We then focus on formal techniques and theory for analyzing the functionality, timing, power consumption, and chip area properties of these basic circuits and ones yet to be presented. From there, we move to more complex adders (carry-lookahead, carry-skip, carry_bypass, Wallace trees, and hybrid techniques) and multipliers (sequential, array, Booth, and others) along with various divider circuits. Floating point units are then built upon the concepts introduced for adder, multipliers, and dividers. Finally, we will investigate the design and implementation of digital filter circuits. For each circuit introduced, we will develop techniques for evaluating their functionality, their speed, power consumption, and silicon area requirements. In addition, we will utilize various CAD tools to design and evaluate most of the computation circuits discussed. After successful completion of the course, students will not only have an understanding of complex computation circuits, but subtle concepts that include hazards, metastability, false paths, inertial delay, sticky bits, clock skew/jitter, dynamic and static sensitization, and many others. 3 hrs. lec., 1 hr. rec.","title":"Digital Computation"},{"courseId":"18345","treeType":"OR","nodeId":18,"isStarter":true,"prereqIndices":[19,7],"postreqIndices":[111,127],"prereqLinks":[17,18],"postreqLinks":[154,176],"description":"This course introduces the fundamental concepts of telecommunication networks. Underlying engineering principles of telephone networks, computer networks and integrated digital networks are discussed. Topics in the course include: telephone and data networks overview; OSI layers; data link protocol; flow control, congestion control, routing; local area networks; transport layer; introduction to high-speed networks; performance evaluation techniques. The course also reviews important aspects of network security and widely used classes of Internet application and services, such as peer-to-peer, content delivery networks, and video streaming.","title":"Introduction to Telecommunication Networks"},{"courseId":"","treeType":"OR","nodeId":19,"isStarter":true,"prereqIndices":[20,21,22],"postreqIndices":[18],"prereqLinks":[14,15,16],"postreqLinks":[17]},{"courseId":"36217","treeType":"OR","nodeId":20,"isStarter":true,"prereqIndices":[],"postreqIndices":[19,109],"prereqLinks":[],"postreqLinks":[14,152],"description":"","title":""},{"courseId":"36212","treeType":"OR","nodeId":21,"isStarter":true,"prereqIndices":[],"postreqIndices":[19],"prereqLinks":[],"postreqLinks":[15],"description":"","title":""},{"courseId":"36226","treeType":"OR","nodeId":22,"isStarter":true,"prereqIndices":[],"postreqIndices":[19],"prereqLinks":[],"postreqLinks":[16],"description":"","title":""},{"courseId":"18348","treeType":"OR","nodeId":23,"isStarter":true,"prereqIndices":[12,7],"postreqIndices":[40,61,65,67,70,71,73,97,98,106,123],"prereqLinks":[19,20],"postreqLinks":[39,78,87,93,96,99,103,126,129,148,173],"description":"Embedded computing applications far outnumber desktop computers, with billions of microcontrollers produced worldwide each year. Embedded systems vary tremendously, from the single 8-bit processor in a thermostat, to high performance processors in a digital camera, to dozens of networked processors in an automobile. Despite this diversity of applications, there are core technology and system-level skills needed by any embedded system designer that form the content of this course. The emphasis of this course will be at the system layer where hardware meets software, with plenty of hands-on experience at \u0026quot;bare metal\u0026quot; programming. Topics typically covered include embedded computing platforms (hardware, microcontroller instruction sets, software in both assembly language and C); interacting with the external world (analog I/O, digital I/O, serial ports, filtering, control, embedded networks); system-level engineering (design cycle, architectural patterns, peer reviews); real-time operation (timers, interrupts, concurrency, task switching, writing a simple RTOS kernel, scheduling); constraints and optimization (economics, power, performance); and a survey of techniques important for building systems that work in the real world (debug, test, robust design, dependability, safety, ethical/societal issues). Weekly hands-on hardware and software experiences with a 16-bit microcontroller module will tie directly to lectures to reinforce core skills. 4 hrs. lec., 1 hr. rec., 3 hrs. lab. Anti-requisites: 18342 or 18349","title":"Embedded Systems Engineering"},{"courseId":"18390","treeType":"OR","nodeId":24,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"The Department of Electrical and Computer Engineering at Carnegie Mellon considers experiential learning opportunities important educational options for its undergraduate students. One such option is cooperative education, which provides a student with an extended period of exposure with a company. To participate, students must complete an ECE Co-op Approval form (located in HH 1115) and submit for approval. Students must possess at least junior status and have an overall grade point average of 3.0 or above. All co-ops must be approximately 8 months in uninterrupted length. If the co-op is approved, the ECE Undergraduate Studies Office will add the course to the student\u0027s schedule. Upon completion of the co-op experience, students must submit a 1-2 page report of their work experience, and a 1-2 page evaluation from the company supervisor to the ECE Undergraduate Office. International students should also be authorized by the Office of International Education (OIE). More information regarding CPT is available on OIE\u0027s website.","title":"ECE CO-OP"},{"courseId":"18402","treeType":"OR","nodeId":25,"isStarter":true,"prereqIndices":[26],"postreqIndices":[],"prereqLinks":[21],"postreqLinks":[],"description":"This course builds upon the electric and magnetic field foundations established in 18-300 to describe phenomena and devices where electromagnetic waves are a central issue. Topics include: review of Maxwell?s equations, propagation of uniform plane waves in lossless and lossy media, energy conservation as described by the Poynting Theorem, reflection and transmission with normal and oblique incidence upon boundaries, sinusoidal steady state and transients on 2-conductor transmission lines, modal descriptions of waveguides, radiation and antennas. 4 hrs. lec.","title":"Applied Electrodynamics"},{"courseId":"18300","treeType":"OR","nodeId":26,"isStarter":true,"prereqIndices":[],"postreqIndices":[25,52,53,57],"prereqLinks":[],"postreqLinks":[21,51,54,66],"description":"","title":""},{"courseId":"18411","treeType":"OR","nodeId":27,"isStarter":true,"prereqIndices":[28,2,4,29,30],"postreqIndices":[],"prereqLinks":[22,23,24,25,26],"postreqLinks":[],"description":"This course develops the methods to formulate basic engineering problems in a way that makes them amenable to computational/numerical analysis. The course will consist of three main modules: basic programming skills, discretization of ordinary and partial differential equations, and numerical methods. These modules are followed by two modules taken from a larger list: Monte Carlo-based methods, molecular dynamics methods, image analysis methods, and so on. Students will learn how to work with numerical libraries and how to compile and execute scientific code written in Fortran-90 and C++. Students will be required to work on a course project in which aspects from at least two course modules must be integrated.","title":"Computational Techniques in Engineering"},{"courseId":"15100","treeType":"OR","nodeId":28,"isStarter":true,"prereqIndices":[],"postreqIndices":[27],"prereqLinks":[],"postreqLinks":[22],"description":"","title":""},{"courseId":"21259","treeType":"OR","nodeId":29,"isStarter":true,"prereqIndices":[],"postreqIndices":[27],"prereqLinks":[],"postreqLinks":[25],"description":"","title":""},{"courseId":"21260","treeType":"OR","nodeId":30,"isStarter":true,"prereqIndices":[],"postreqIndices":[27],"prereqLinks":[],"postreqLinks":[26],"description":"","title":""},{"courseId":"18418","treeType":"OR","nodeId":31,"isStarter":true,"prereqIndices":[9],"postreqIndices":[],"prereqLinks":[27],"postreqLinks":[],"description":"This course provides an introduction to the fundamentals of electrical energy conversion and its use in several real-life systems. The course starts with a brief review of general mathematical and physical principles necessary for subsequent study of electrical energy conversion applications. This includes modeling, analysis, and control of general physical systems in time and frequency domain. Since the focus of energy conversion methods studied in this course is from electrical to mechanical systems, special attention is paid to electromagnetic theory. Rotating machines theory is developed and intuitively explained starting with Maxwell equations and analyzing general static and dynamic electromagnetic circuits. Power electronics methods are also introduced because most of modern electrical systems employ such methods. At this point, the necessary background is gained to analyze real life electrical energy conversion systems. We will focus on automotive, airplane, space station, and sea power systems. The main focus will be on operational principles and when appropriate stability issues of particular implementations. Time allowing, dynamic problems with interconnecting such systems will be briefly introduced and possibly studied by curious students in their course projects.","title":"Electric Energy Processing: Fundamentals and Applications"},{"courseId":"18421","treeType":"OR","nodeId":32,"isStarter":true,"prereqIndices":[14,33],"postreqIndices":[57,58],"prereqLinks":[28,29],"postreqLinks":[67,70],"description":"The purpose of this course is to introduce the student to the fundamentals of the analysis and design of basic analog circuits. Topics to be covered include transistor large- and small-signal device models, DC bias calculations, small-signal gain and frequency response characteristics of transistor-based amplifiers, large-signal amplifier characteristics and nonidealities, operational amplifier design, basic amplifier feedback theory, frequency stability and compensation. In the hardware laboratory the student will gain experience designing, building, and characterizing analog circuits. The students will also learn how to use the SPICE circuit simulation program to compare actual and simulated performance. The analysis and design of analog circuits incorporating both Bipolar and CMOS technologies will be considered.","title":"Analog Integrated Circuits I"},{"courseId":"18320","treeType":"OR","nodeId":33,"isStarter":true,"prereqIndices":[],"postreqIndices":[32,34,40,52,54,56,60,63,70,76,77,97,100,102,103,104,113,115],"prereqLinks":[],"postreqLinks":[29,31,41,52,58,64,72,81,97,112,115,127,133,138,141,144,159,160],"description":"","title":""},{"courseId":"18422","treeType":"OR","nodeId":34,"isStarter":true,"prereqIndices":[12,33],"postreqIndices":[],"prereqLinks":[30,31],"postreqLinks":[],"description":"This course covers the design and implementation of digital circuits in a modern VLSI process technology. Topics will include logic gate design, functional unit design, latch/flip-flop design, system clocking, memory design, clock distribution, power supply distribution, design for test, and design for manufacturing. The lab component of the course will focus on using modern computer aided design (CAD) software to design, simulate, and lay out digital circuits. The final project for the course involves the design and implementation to the layout level of a moderately sized computational block.","title":"Digital Integrated Circuits 1"},{"courseId":"18432","treeType":"OR","nodeId":35,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"The Department of Electrical and Computer Engineering at Carnegie Mellon considers experiential learning opportunities important educational options for its undergraduate students. One such option is conducting undergraduate research with a faculty member. Students do not need to officially register for undergraduate research unless they want it listed on their official transcripts. An ECE student who is involved in a research project and is interested in registering this undergraduate research for course credit on the official transcript may request to be enrolled in this course. To do this, the student should first complete the on-line undergraduate research form available on the ECE undergraduate student page. Once the form has been submitted and approved by the faculty member the student is conducting the research with, the ECE Undergraduate Office will add the course to the student\u0027s schedule. Typical credit is granted as one hour of research per week is equal to one unit of credit.","title":"Senior Projects"},{"courseId":"18447","treeType":"OR","nodeId":36,"isStarter":true,"prereqIndices":[12,37,40],"postreqIndices":[63,84],"prereqLinks":[32,36,42],"postreqLinks":[84,119],"description":"Computer architecture is the science and art of selecting and interconnecting hardware components to create a computer that meets functional, performance and cost goals. This course introduces the basic hardware structure of a modern programmable computer including, the basic laws underlying performance evaluation. We will learn, for example, how to design the control and data path hardware for a MIPS-like processor, how to make machine instructions execute simultaneously through pipelining and simple superscalar execution, and how to design fast memory and storage systems. The principles presented in lecture are reinforced in the laboratory through design and simulation of a register transfer (RT) implementation of a MIPS-like pipelined superscalar in Verilog. Learning to design programmable systems requires that you already have the knowledge of building RT systems as is taught in the prerequisite 18-240, the knowledge of the behavior storage hierarchies (e.g., cache memories) and virtual memory as is taught in the prerequisite 15-213, and the knowledge of assembly language programming as is taught in the prerequisites. 3 hrs. lec., 3 hrs. lab.","title":"Introduction to Computer Architecture"},{"courseId":"","treeType":"OR","nodeId":37,"isStarter":true,"prereqIndices":[38,7,39],"postreqIndices":[36],"prereqLinks":[33,34,35],"postreqLinks":[36]},{"courseId":"15213","treeType":"OR","nodeId":38,"isStarter":true,"prereqIndices":[],"postreqIndices":[37,44],"prereqLinks":[],"postreqLinks":[33,43],"description":"","title":""},{"courseId":"18243","treeType":"OR","nodeId":39,"isStarter":true,"prereqIndices":[],"postreqIndices":[37,44],"prereqLinks":[],"postreqLinks":[35,44],"description":"","title":""},{"courseId":"","treeType":"OR","nodeId":40,"isStarter":true,"prereqIndices":[17,41,23,42,33],"postreqIndices":[36],"prereqLinks":[37,38,39,40,41],"postreqLinks":[42]},{"courseId":"18341","treeType":"OR","nodeId":41,"isStarter":true,"prereqIndices":[],"postreqIndices":[40,61,104,117],"prereqLinks":[],"postreqLinks":[38,77,145,163],"description":"","title":""},{"courseId":"18349","treeType":"OR","nodeId":42,"isStarter":true,"prereqIndices":[],"postreqIndices":[40,61,65,67,74,75,76,100,101,106,123],"prereqLinks":[],"postreqLinks":[40,79,88,94,105,108,111,132,135,149,174],"description":"","title":""},{"courseId":"18474","treeType":"OR","nodeId":43,"isStarter":true,"prereqIndices":[44,45],"postreqIndices":[],"prereqLinks":[45,48],"postreqLinks":[],"description":"This course introduces principles for design of embedded controllers. In applications ranging from airplanes, to automobiles, to manufacturing systems, embedded computers now close feedback loops that were previously closed by mechanical devices or by humans in the loop. This course emphasizes practical insight into the tools for modeling and simulating these dynamic physical systems, and methods for designing the real-time software for embedded computers to control them. Lectures cover relevant theory and background from real-time systems and control engineering, including event-based and clock-based sampling, switching control, PWM (pulse-width modulation), PID (proportional-integral-derivative) design, state-variable feedback, state estimation, and methods for setpoint control and trajectory tracking. Basic embedded computing, sensor, and actuator technologies are reviewed, including microcontrollers, DC motors and optical encoders. In the laboratory, students use commercial tools for simulation and automatic code generation to design and implement embedded control system experiments. 3 hrs. lecture, 3 hrs. lab.","title":"Embedded Control Systems"},{"courseId":"","treeType":"OR","nodeId":44,"isStarter":true,"prereqIndices":[38,39],"postreqIndices":[43],"prereqLinks":[43,44],"postreqLinks":[45]},{"courseId":"","treeType":"OR","nodeId":45,"isStarter":true,"prereqIndices":[46,47],"postreqIndices":[43],"prereqLinks":[46,47],"postreqLinks":[48]},{"courseId":"18396","treeType":"OR","nodeId":46,"isStarter":true,"prereqIndices":[],"postreqIndices":[45],"prereqLinks":[],"postreqLinks":[46],"description":"","title":""},{"courseId":"18370","treeType":"OR","nodeId":47,"isStarter":true,"prereqIndices":[],"postreqIndices":[45,60,63,67,73,74,77,134],"prereqLinks":[],"postreqLinks":[47,73,82,91,102,106,114,183],"description":"","title":""},{"courseId":"18482","treeType":"OR","nodeId":48,"isStarter":true,"prereqIndices":[49],"postreqIndices":[],"prereqLinks":[49],"postreqLinks":[],"description":"This course provides a comprehensive introduction to basic principles of telecommunications technology and the telephone network, and the legal, economic, and regulatory environment of the telecommunications industry. Role of new technologies such as fiber, integrated digital networks, computer communications, and information services. Common carrier law and the economics of natural monopoly as the basis for regulation of the telecommunications industry. Issues of competition, monopoly and technical standards. Spectrum allocation and management. International communications and transborder data flow. Special emphasis on how the new technologies have altered and are altered by regulation. Junior or Senior standing required.","title":"Telecommunications, Technology Policy \u0026amp; Management"},{"courseId":"73100","treeType":"OR","nodeId":49,"isStarter":true,"prereqIndices":[],"postreqIndices":[48],"prereqLinks":[],"postreqLinks":[49],"description":"","title":""},{"courseId":"18491","treeType":"OR","nodeId":50,"isStarter":true,"prereqIndices":[14],"postreqIndices":[53,55,56,60,63,66],"prereqLinks":[50],"postreqLinks":[55,61,63,74,83,90],"description":"This course addresses the mathematics, implementation, design and application of the digital signal processing algorithms widely used in areas such as multimedia telecommunications and speech and image processing. Topics include discrete-time signals and systems, discrete-time Fourier transforms and Z-transforms, discrete Fourier transforms and fast Fourier transforms, digital filter design and implementation, and multi-rate signal processing. The course will include introductory discussions of 2-dimensional signal processing, linear prediction, adaptive filtering, and selected application areas. Classroom lectures are supplemented with implementation exercises using MATLAB.","title":"Fundamentals of Signal Processing"},{"courseId":"18510","treeType":"OR","nodeId":51,"isStarter":true,"prereqIndices":[52,53,54,55,56,57,58],"postreqIndices":[],"prereqLinks":[53,56,59,62,65,68,71],"postreqLinks":[],"description":"Please refer to the ECE webpage for a full description of this course. http://www.ece.cmu.edu/courses/18510","title":"Sensor Systems Design"},{"courseId":"","treeType":"AND","nodeId":52,"isStarter":true,"prereqIndices":[26,33],"postreqIndices":[51],"prereqLinks":[51,52],"postreqLinks":[53]},{"courseId":"","treeType":"AND","nodeId":53,"isStarter":true,"prereqIndices":[26,50],"postreqIndices":[51],"prereqLinks":[54,55],"postreqLinks":[56]},{"courseId":"","treeType":"AND","nodeId":54,"isStarter":true,"prereqIndices":[15,33],"postreqIndices":[51],"prereqLinks":[57,58],"postreqLinks":[59]},{"courseId":"","treeType":"AND","nodeId":55,"isStarter":true,"prereqIndices":[15,50],"postreqIndices":[51],"prereqLinks":[60,61],"postreqLinks":[62]},{"courseId":"","treeType":"AND","nodeId":56,"isStarter":true,"prereqIndices":[50,33],"postreqIndices":[51],"prereqLinks":[63,64],"postreqLinks":[65]},{"courseId":"","treeType":"AND","nodeId":57,"isStarter":true,"prereqIndices":[26,32],"postreqIndices":[51],"prereqLinks":[66,67],"postreqLinks":[68]},{"courseId":"","treeType":"AND","nodeId":58,"isStarter":true,"prereqIndices":[15,32],"postreqIndices":[51],"prereqLinks":[69,70],"postreqLinks":[71]},{"courseId":"18540","treeType":"OR","nodeId":59,"isStarter":true,"prereqIndices":[60,61],"postreqIndices":[],"prereqLinks":[75,80],"postreqLinks":[],"description":"This is a project-oriented course which will deal with all four aspects of project development; the application, the artifact, the computer-aided design environment, and the physical prototyping facilities. The class, in conjunction with the instructors, will develop specifications for a mobile computer to assist in inspection and maintenance. The application will be partitioned between human computer interaction, electronics, industrial design, mechanical, and software components. The class will be divided into groups to specify, design, and implement the various subsystems. The goal is to produce a working hardware/software prototype of the system and to evaluate the user acceptability of the system. We will also monitor our progress in the design process by capturing our design escapes (errors) with the Orthogonal Defect Classification (ODC). Upon completion of this course the student will be able to: generate systems specifications from a perceived need; partition functionality between hardware and software; produce interface specifications for a system composed of numerous subsystems; use computer-aided design tools; fabricate, integrate, and debug a hardware/software system; and evaluate the system in the context of an end user application. Senior standing is required.","title":"Rapid Prototyping of Computer Systems"},{"courseId":"","treeType":"OR","nodeId":60,"isStarter":true,"prereqIndices":[33,47,50],"postreqIndices":[59],"prereqLinks":[72,73,74],"postreqLinks":[75]},{"courseId":"","treeType":"OR","nodeId":61,"isStarter":true,"prereqIndices":[17,41,23,42],"postreqIndices":[59],"prereqLinks":[76,77,78,79],"postreqLinks":[80]},{"courseId":"18549","treeType":"OR","nodeId":62,"isStarter":true,"prereqIndices":[63,65],"postreqIndices":[],"prereqLinks":[86,89],"postreqLinks":[],"description":"18-549 Embedded Systems Design This course comprises a semester-long project experience geared towards the development of skills to design realistic and practical embedded systems and applications. Students will work in teams on an innovative project that will involve the hands-on design, configuration, engineering, implementation and testing of a prototype of an embedded system of their choice. Students will be expected to leverage proficiency and background gained from other courses, particularly with regard to embedded real-time principles and embedded programming. The project will utilize a synergistic mixture of skills in system architecture, modular system design, software engineering, subsystem integration, debugging and testing. From inception to demonstration of the prototype, the course will follow industrial project practices, such as version control, design requirements, design reviews and quality assurance plans. The initial lecture content will cover background material intended to complement the project work. The remainder of the course will consist of regular team presentations of key project milestones, current project status, a final project presentation and functional demonstrations of various subsystems, even as the entire prototype is being developed. Please refer to the course website for more information: http://www.ece.cmu.edu/~ece549/","title":"Embedded Systems Design"},{"courseId":"","treeType":"OR","nodeId":63,"isStarter":true,"prereqIndices":[33,47,50,36,64],"postreqIndices":[62],"prereqLinks":[81,82,83,84,85],"postreqLinks":[86]},{"courseId":"15410","treeType":"OR","nodeId":64,"isStarter":true,"prereqIndices":[],"postreqIndices":[63,106,123,130],"prereqLinks":[],"postreqLinks":[85,150,169,180],"description":"","title":""},{"courseId":"","treeType":"OR","nodeId":65,"isStarter":true,"prereqIndices":[23,42],"postreqIndices":[62],"prereqLinks":[87,88],"postreqLinks":[89]},{"courseId":"18551","treeType":"OR","nodeId":66,"isStarter":true,"prereqIndices":[50,67],"postreqIndices":[],"prereqLinks":[90,95],"postreqLinks":[],"description":"This course provides the student with a rich, in-depth design and application hardware project experience in the areas of digital communications and/or signal processing systems using DSP hardware. Teams of students work on a semester-long project of their choice. Topics include: speech and music processing, digital communications, multimedia processing, data compression, data storage, wireless communications, CD, image and/or signal processing, etc. One month of introductory laboratories familiarize the students with DSP hardware and support software. Lectures address z-transforms, IIR and FIR filter design using MATLAB and DSP hardware, LPC and adaptive filters, channel coding, time and frequency multiplexing, short time Fourier and wavelet transforms, and spread spectrum techniques. 4 hrs. lec., 3 hrs. lab.","title":"Digital Communication and Signal Processing Systems Design"},{"courseId":"","treeType":"OR","nodeId":67,"isStarter":true,"prereqIndices":[47,68,23,42],"postreqIndices":[66],"prereqLinks":[91,92,93,94],"postreqLinks":[95]},{"courseId":"18496","treeType":"OR","nodeId":68,"isStarter":true,"prereqIndices":[],"postreqIndices":[67],"prereqLinks":[],"postreqLinks":[92],"description":"","title":""},{"courseId":"18578","treeType":"OR","nodeId":69,"isStarter":true,"prereqIndices":[70,71,73,74,75,76,77],"postreqIndices":[],"prereqLinks":[98,101,104,107,110,113,116],"postreqLinks":[],"description":"Mechatronics is the synergistic integration of mechanism, electronics, and computer control to achieve a functional system. Because of the emphasis upon integration, this course will center around system integration in which small teams of students will configure, design, and implement a succession of mechatronic subsystems, leading to a main project. Lectures will complement the laboratory experience with comparative surveys, operational principles, and integrated design issues associated with the spectrum of mechanism, electronics, and control components. Class lectures will cover topics intended to complement the laboratory work, including mechanisms, actuators, motor drives, sensors and electronic interfaces, microcontroller hardware and programming and basic controls. During the first week of class, each student will be asked to complete a questionnaire about their technical background. The class will then be divided into multi-disciplinary teams of three students. During the first half of the class, lab assignments will be made every 1-2 weeks to construct useful subsystems based on material learned in lecture. The lab assignments are geared to build to the main project. This course is cross-listed as 16-778 and 24-778. Students in other departments may take the course upon availability of slots with permission of instructor. Non ECE students may take the course upon availability of slots with permission of the instructor.","title":"Mechatronic Design"},{"courseId":"","treeType":"AND","nodeId":70,"isStarter":true,"prereqIndices":[23,33],"postreqIndices":[69],"prereqLinks":[96,97],"postreqLinks":[98]},{"courseId":"","treeType":"AND","nodeId":71,"isStarter":true,"prereqIndices":[23,72],"postreqIndices":[69],"prereqLinks":[99,100],"postreqLinks":[101]},{"courseId":"15313","treeType":"OR","nodeId":72,"isStarter":true,"prereqIndices":[],"postreqIndices":[71,75],"prereqLinks":[],"postreqLinks":[100,109],"description":"","title":""},{"courseId":"","treeType":"AND","nodeId":73,"isStarter":true,"prereqIndices":[47,23],"postreqIndices":[69],"prereqLinks":[102,103],"postreqLinks":[104]},{"courseId":"","treeType":"AND","nodeId":74,"isStarter":true,"prereqIndices":[42,47],"postreqIndices":[69],"prereqLinks":[105,106],"postreqLinks":[107]},{"courseId":"","treeType":"AND","nodeId":75,"isStarter":true,"prereqIndices":[42,72],"postreqIndices":[69],"prereqLinks":[108,109],"postreqLinks":[110]},{"courseId":"","treeType":"AND","nodeId":76,"isStarter":true,"prereqIndices":[42,33],"postreqIndices":[69],"prereqLinks":[111,112],"postreqLinks":[113]},{"courseId":"","treeType":"AND","nodeId":77,"isStarter":true,"prereqIndices":[47,33],"postreqIndices":[69],"prereqLinks":[114,115],"postreqLinks":[116]},{"courseId":"18601","treeType":"OR","nodeId":78,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"Ever want to start a company? Thinking about commercializing an innovation? Want to know what VCs really think? Do you have what it takes to be an entrepreneur? Then this is the class for you. Entrepreneurship and Innovation in Technology is an introductory course in entrepreneurship for graduate students. The course targets non-business students and assumes no background in business. Students are exposed to fundamental concepts and issues around innovation and entrepreneurship. The course provides a foundation for starting a new venture and innovating new technologies and products within existing organizations. Topics covered will include: identifying a business opportunity, acquiring customers, building a team, developing a business model, understanding investment, managing risk, and achieving differentiation. Emphasis will be on team projects, including developing an investor pitch for an original idea.","title":"Entrepreneurship and Innovation in Technology"},{"courseId":"18603","treeType":"OR","nodeId":79,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"It\u0027s not enough to understand the latest cad software, and be proficient at rigorous mathematical analysis. Being an inspired and innovative engineer is not really enough. To accomplish your goals as an engineer you have to understand how organizations work, and how to get all kinds of people to help you. In other words, you need to be a leader in your organization, whether that is a start-up or a Fortune 100 company. The class will begin by reviewing basic economics and financial accounting terms: a leader must know something about money. There will be hands-on classes on the predominant American corporate culture: a leader must know the atmosphere he or she breathes. The meat of the course will be learning about four keys to leadership: a working knowledge of variability in processes and people; some basic psychology, including personality types; some epistemology---how to really know what you think you know; and systems theory to understand all the parts of an enterprise. Classroom demonstrations and ungraded homework will illustrate each of these four keys. Each situation requiring leadership is unique, but studying the four keys will prepare you to step in and act with confidence. When you finish this course you will be prepared to lead not just an engineering team, but to lead an enterprise.","title":"Leadership for Engineers"},{"courseId":"18610","treeType":"OR","nodeId":80,"isStarter":true,"prereqIndices":[15],"postreqIndices":[],"prereqLinks":[117],"postreqLinks":[],"description":"This course is intended to provide a foundation in device operation for circuit designers working in today\u0027s sub-micron CMOS. This course will also provide advanced understanding of CMOS technology for those interested in integrated circuit process technology and device physics. We review semiconductor device physics, including carrier dynamics and the basic equations of semiconductor device physics. The operation of the p-n junction diode is also reviewed. The course includes a description of integrated circuit fabrication technology and how it is used to fabricate CMOS devices. With this foundation, we then discuss the MOS capacitor (including its application as a varactor). The theory of the MOS transistor will then be developed, followed by a discussion of important phenomena in sub-micron devices such as: velocity saturation; breakdown; drain-induced barrier lowering; random dopant fluctuations, etc. The student will learn the relationship between device geometry, e.g. length, and fabrication, e.g. doping, and the corresponding circuit performance. The course will primarily be lecture-based, with some selected simulation exercises. Students are expected to be acquainted with the basic concepts of electrical circuits; electromagnetic fields at the level of a sophomore level physics course, and to have adequate preparation in mathematics (basic differential equations and MATLAB or similar applications). Prior coursework in device physics is helpful but not required for graduate students. Lecture: 4 hrs Prerequisite(s): 18-310","title":"Fundamentals of Modern CMOS Devices"},{"courseId":"18615","treeType":"OR","nodeId":81,"isStarter":true,"prereqIndices":[15],"postreqIndices":[],"prereqLinks":[118],"postreqLinks":[],"description":"This course is intended to introduce students to the process flow and design methodology for integrated systems fabrication. The course will present this material through two paths. Lectures will be presented on the basic unit processes of micro and nanosystems fabrication: deposition, patterning, and etching. Lectures will draw on examples from: Semiconductor device fabrication; Microelectromechanical systems (MEMS) fabrication; Magnetic device fabrication, and; Optical device fabrication. Problem sets will be given based on this lecture material to allow students to quantitatively analyze certain process steps in detail. The second path for material presentation will be through a series of labs that allow students to design, fabricate and test an integrated device. These laboratories will be scheduled at regular meeting times, and will use research facilities within the ECE Department. 6 hrs. lec., 6 hrs. lab Prerequisites: 18-310, senior standing with instructor\u0027s permission, or graduate standing","title":"Micro and Nano Systems Fabrication"},{"courseId":"18625","treeType":"OR","nodeId":82,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"TBA","title":"System on Chip Design"},{"courseId":"18637","treeType":"OR","nodeId":83,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"With communication and network services and applications increasingly leveraging wireless media, the importance of information and network security in the wireless domain continues to grow. The challenges of providing secure communication and network services are considerably more difficult in wireless environments than in traditional wired systems (e.g., the Internet), so the focus of the course will be purely wireless environments such as wireless ad hoc, mesh, and sensor networks. Coverage will focus on wireless vulnerabilities and attacks at various layers of the protocol stack, spanning the stack from aspects of physical communication to application and service security issues. Focus will be placed on securing the operation and performance of wireless networks, with less emphasis on information security. Topics include MAC-layer misbehavior; selective packet dropping, modification, and insertion; jamming; distributed trust in ad hoc environments; reputation systems; and cross-layer attacks. Class material will be largely based on recent and current research; students will read and present recent research papers and participate in a group research project.","title":"Wireless Network Security"},{"courseId":"18640","treeType":"OR","nodeId":84,"isStarter":true,"prereqIndices":[36],"postreqIndices":[],"prereqLinks":[119],"postreqLinks":[],"description":"Computer Architecture deals with the art and science of designing modern computer systems, defines the HW/SW interface (Instruction Set Architecture), and codifies a large body of implementation techniques for achieving performance improvement and power efficiency. This graduate level course covers the three main subsystems of Processor, Memory, and I/O, and addresses Performance and Power optimizations. Processor design is the primary focus covering: pipelined and superscalar processor design; multi-core and multi-processor systems; special-purpose processors. Memory and I/O topics include: memory hierarchy and virtual memory; shared-memory model and cache coherence; I/O devices and storage systems. Performance and Power topics include: instruction-level, memory-level and thread-level parallelisms; instruction flow and data flow optimizations; performance vs. power tradeoffs; iron laws governing performance, power, and energy efficiency. Prerequisite: undergraduate course on Computer Architecture","title":"Foundations of Computer Architecture"},{"courseId":"18641","treeType":"OR","nodeId":85,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"This course provides an intensive exploration of computer programming in the Java Language, teaching the basics and then going on to teach smart phone development using Java. It is intended for master\u0027s students who have had some prior, but perhaps limited, programming experience in Java or another programming language; it is not intended as a first course in programming. Prerequisites: Graduate Standing; a previous course in programming, or equivalent experience and consent of the instructor. This course is broadcast from Silicon Valley to the Pittsburgh Campus.","title":"Java Smart Phone Development"},{"courseId":"18645","treeType":"OR","nodeId":86,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"The fast evolution and increasing complexity of computing platforms pose a major challenge for developers of high performance software for engineering, science, and consumer applications: it becomes increasingly harder to harness the available computing power. Straightforward implementations may lose as much as one or two orders of magnitude in performance. On the other hand, creating optimal implementations requires the developer to have an understanding of algorithms, capabilities and limitations of compilers, and the target platform\u0027s architecture and microarchitecture. This interdisciplinary course introduces the student to the foundations and state-of-the-art techniques in high performance software development using important functionality such as linear algebra kernels, transforms, filters, and others as examples. The course will explain how to optimize for the memory hierarchy, take advantage of special instruction sets, and how to write parallel code for multicore, manycore, and cluster platforms, based on state-of-the-art research. Further, a general strategy for performance analysis and optimization is introduced that the students will apply in group projects that accompany the course. Finally, the course will introduce the students to the recent field of automatic performance tuning. Prerequiste: Senior ECE or CS undergraduate student or higher, solid C programming skills.","title":"How to Write Fast Code"},{"courseId":"18698","treeType":"OR","nodeId":87,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"The brain is among the most complex systems ever studied. Underlying the brain\u0027s ability to process sensory information and drive motor actions is a network of roughly 1011 neurons, each making 103 connections with other neurons. Modern statistical and machine learning tools are needed to interpret the plethora of neural data being collected, both for (1) furthering our understanding of how the brain works, and (2) designing biomedical devices that interface with the brain. This course will cover a range of statistical methods and their application to neural data analysis. The statistical topics include latent variable models, dynamical systems, point processes, dimensionality reduction, Bayesian inference, and spectral analysis. The neuroscience applications include neural decoding, firing rate estimation, neural system characterization, sensorimotor control, spike sorting, and field potential analysis. Prerequisites: 18-290; 36-217, or equivalent introductory probability theory and random variables course; an introductory linear algebra course; senior or graduate standing. No prior knowledge of neuroscience is needed","title":"Neural Signal Processing"},{"courseId":"18721","treeType":"OR","nodeId":88,"isStarter":true,"prereqIndices":[89],"postreqIndices":[],"prereqLinks":[120],"postreqLinks":[],"description":"This course will familiarize students with advanced analog integrated circuit design issues. Analog circuit design issues play an important role in creating modern ICs. First and foremost, analog circuits act as the interface between digital systems and the real world. They act to amplify and filter analog signals, and to convert signals from analog to digital and back again. These analog interfaces appear in all communications devices (e.g., cell phones) ? both to condition the ?transmitted? signal and as sensitive ?receivers.? In addition, these analog interfaces appear in sensors (e.g., accelerometer). The goal of this course is to familiarize students with some of the advanced analog circuit design ideas that are involved in these tasks. Specific topics will include analog filtering (continuous-time and discrete-time), sample-and-hold amplifiers, analog-to-digital converters, digital-to-analog converters. Prerequisites: 18-623 (was 18-523 before Fall 2005) and senior or graduate standing.","title":"Advanced Analog Integrated Circuits Design"},{"courseId":"18623","treeType":"OR","nodeId":89,"isStarter":true,"prereqIndices":[],"postreqIndices":[88],"prereqLinks":[],"postreqLinks":[120],"description":"","title":""},{"courseId":"18731","treeType":"OR","nodeId":90,"isStarter":true,"prereqIndices":[91,92],"postreqIndices":[],"prereqLinks":[121,122],"postreqLinks":[],"description":"Some of today\u0027s most damaging attacks on computer systems involve exploitation of network infrastructure, either as the target of attack or as a vehicle to advance attacks on end systems. This course provides an in-depth study of network attack techniques and methods to defend against them. Topics include firewalls and virtual private networks; network intrusion detection; denial of service (DoS) and distributed denial-of-service (DDoS) attacks; DoS and DDoS detection and reaction; worm and virus propagation; tracing the source of attacks; traffic analysis; techniques for hiding the source or destination of network traffic; secure routing protocols; protocol scrubbing; and advanced techniques for reacting to network attacks. Prerequisite: 18-630 OR 18-730, and senior or graduate standing.","title":"Network Security"},{"courseId":"18630","treeType":"OR","nodeId":91,"isStarter":true,"prereqIndices":[],"postreqIndices":[90],"prereqLinks":[],"postreqLinks":[121],"description":"","title":""},{"courseId":"18730","treeType":"OR","nodeId":92,"isStarter":true,"prereqIndices":[],"postreqIndices":[90,93,94,95],"prereqLinks":[],"postreqLinks":[122,123,124,125],"description":"","title":""},{"courseId":"18732","treeType":"OR","nodeId":93,"isStarter":true,"prereqIndices":[92],"postreqIndices":[],"prereqLinks":[123],"postreqLinks":[],"description":"Poor software design and engineering are the root causes of most security vulnerabilities in deployed systems today. Moreover, with code mobility now commonplace--particularly in the context of web technologies and digital rights management--system designers are increasingly faced with protecting hosts from foreign software and protecting software from foreign hosts running it. This class takes a close look at software as a mechanism for attack, as a tool for protecting resources, and as a resource to be defended. Topics covered include the software design process; choices of programming languages, operating systems, databases and distributed object platforms for building secure systems; common software vulnerabilities, such as buffer overflows and race conditions; auditing software; proving properties of software; software and data watermarking; code obfuscation; tamper resistant software; and the benefits of open and closed source development. Prerequisites: 18-730; Skills in operating systems and programming languages (C and Java), and senior or graduate standing.","title":"Secure Software Systems"},{"courseId":"18733","treeType":"OR","nodeId":94,"isStarter":true,"prereqIndices":[92],"postreqIndices":[],"prereqLinks":[124],"postreqLinks":[],"description":"A wide array of communication and data protections employ cryptographic mechanisms. This course explores modern cryptographic (code making) and cryptanalytic (code breaking) techniques in detail. This course emphasizes how cryptographic mechanisms can be effectively used within larger security systems, and the dramatic ways in which cryptographic mechanisms can fall vulnerable to cryptanalysis in deployed systems. Topics covered include cryptographic primitives such as symmetric encryption, public key encryption, digital signatures, and message authentication codes; cryptographic protocols, such as key exchange, remote user authentication, and interactive proofs; cryptanalysis of cryptographic primitives and protocols, such as by side-channel attacks, differential cryptanalysis, or replay attacks; and cryptanalytic techniques on deployed systems, such as memory remanence, timing attacks, and differential power analysis. Prerequisites: 18-730 and senior or graduate standing.","title":"Applied Cryptography"},{"courseId":"18739","treeType":"OR","nodeId":95,"isStarter":true,"prereqIndices":[92],"postreqIndices":[],"prereqLinks":[125],"postreqLinks":[],"description":"Please go to the ECE website to view \u0026quot;Special Topics in Security\u0026quot; course descriptions. http://www.ece.cmu.edu/courses/index.html","title":"Special Topics in Security:"},{"courseId":"18745","treeType":"OR","nodeId":96,"isStarter":true,"prereqIndices":[97,98,100,101,102,103,104],"postreqIndices":[],"prereqLinks":[128,131,134,137,140,143,146],"postreqLinks":[],"description":"This is a project-oriented course which will deal with all four aspects of project development; the application, the artifact, the computer-aided design environment, and the physical prototyping facilities. The class, in conjunction with the instructors, will develop specifications for a mobile computer to assist in inspection and maintenance. The application will be partitioned between human computer interaction, electronics, industrial design, mechanical, and software components. The class will be divided into groups to specify, design, and implement the various subsystems. The goal is to produce a working hardware/software prototype of the system and to evaluate the user acceptability of the system. We will also monitor our progress in the design process by capturing our design escapes (errors) with the Orthogonal Defect Classification (ODC). Upon completion of this course the student will be able to: generate systems specifications from a perceived need; partition functionality between hardware and software; produce interface specifications for a system composed of numerous subsystems; use computer-aided design tools; fabricate, integrate, and debug a hardware/software system; and evaluate the system in the context of an end user application. This course is cross-listed as 18540.","title":"Rapid Prototyping of Computer Systems"},{"courseId":"","treeType":"AND","nodeId":97,"isStarter":true,"prereqIndices":[23,33],"postreqIndices":[96],"prereqLinks":[126,127],"postreqLinks":[128]},{"courseId":"","treeType":"AND","nodeId":98,"isStarter":true,"prereqIndices":[23,99],"postreqIndices":[96],"prereqLinks":[129,130],"postreqLinks":[131]},{"courseId":"18391","treeType":"OR","nodeId":99,"isStarter":true,"prereqIndices":[],"postreqIndices":[98,101,102,110],"prereqLinks":[],"postreqLinks":[130,136,139,156],"description":"","title":""},{"courseId":"","treeType":"AND","nodeId":100,"isStarter":true,"prereqIndices":[42,33],"postreqIndices":[96],"prereqLinks":[132,133],"postreqLinks":[134]},{"courseId":"","treeType":"AND","nodeId":101,"isStarter":true,"prereqIndices":[42,99],"postreqIndices":[96],"prereqLinks":[135,136],"postreqLinks":[137]},{"courseId":"","treeType":"AND","nodeId":102,"isStarter":true,"prereqIndices":[33,99],"postreqIndices":[96],"prereqLinks":[138,139],"postreqLinks":[140]},{"courseId":"","treeType":"AND","nodeId":103,"isStarter":true,"prereqIndices":[33,17],"postreqIndices":[96],"prereqLinks":[141,142],"postreqLinks":[143]},{"courseId":"","treeType":"AND","nodeId":104,"isStarter":true,"prereqIndices":[33,41],"postreqIndices":[96],"prereqLinks":[144,145],"postreqLinks":[146]},{"courseId":"18746","treeType":"OR","nodeId":105,"isStarter":true,"prereqIndices":[7],"postreqIndices":[],"prereqLinks":[147],"postreqLinks":[],"description":"This course covers the design, implementation, and use of storage systems, from the characteristics and operation of individual storage devices through the OS, database, and networking approaches involved in tying them together and making them useful to key applications\u0027 demands and technology trends. Topics to be covered include: network-attached storage, disk arrays, storage networking, storage management, advanced file systems, disk performance enhancement, wide-area data sharing, and storage security. 3 hrs. lec. Prerequisites: 15-410 or 15-412 and senior or graduate standing.","title":"Advanced Storage Systems"},{"courseId":"18748","treeType":"OR","nodeId":106,"isStarter":true,"prereqIndices":[23,42,64],"postreqIndices":[],"prereqLinks":[148,149,150],"postreqLinks":[],"description":"The use of distributed wireless sensor networks have surged in popularity in recent years with applications ranging from environmental monitoring, to people- and object-tracking in both cooperative and hostile environments. This course is targeted at understanding and obtaining hands-on experience with the state of the art in such wireless sensor networks which are often composed using relatively inexpensive sensor nodes that have low power consumption, low processing power and bandwidth. The course will span a variety of topics ranging from radio communications, network stack, systems infrastructure including QoS support and energy management, programming paradigms, distributed algorithms and example applications. Some guest lectures may be given. Each discussion-oriented lecture will be preceded by the reading of 1-2 papers, resulting in a rich collection of papers by the end of the semester. Early in the semester, hands-on exercises will be used to teach the programming of FireFly sensor nodes by using the \u0027nano-RK\u0027 power-aware sensor real-time operating system (RTOS) and using 802.15.4 radio communications. Then, project groups of no more than 3 students will define, design, implement and test a sensor network project. Final in-class project presentations will be supplemented by a written report. A final exam may be conducted to evaluate the students\u0027 understanding of the materials covered. Grading criteria will include classroom participation, course project content and report, and a final exam. Class size will be limited to 20 students or less. Hands-on experience with network programming, operating systems and assembly language are essential. Exceptions only with explicit permission of instructor. Prerequisites: 15-213 and ((18-348 or 18-349) or 15-410), and senior or graduate standing.","title":"Wireless Sensor Networks"},{"courseId":"18752","treeType":"OR","nodeId":107,"isStarter":true,"prereqIndices":[108],"postreqIndices":[],"prereqLinks":[151],"postreqLinks":[],"description":"Decision theory: Binary hypothesis testing, M-ary testing, Bayes, Neyman-Pearson, Min-Max. Performance. Probability of error, ROC. Estimation theory: linear and nonlinear estimation, parameter estimation. Bayes, MAP, maximum likelihood, Cram?r-Rao bounds. Bias, efficiency, consistency. Asymptotic properties of estimators. Orthogonal decomposition of random processes and harmonic representation. Waveform detection and estimation. Wiener filtering and Kalman-Bucy filtering. Elements of identification. Recursive algorithms. Spectral estimation. Topics may vary. 4 hrs. lec. Prerequisites: 18-751 and senior or graduate standing.","title":"Estimation, Detection and Identification"},{"courseId":"18751","treeType":"OR","nodeId":108,"isStarter":true,"prereqIndices":[],"postreqIndices":[107],"prereqLinks":[],"postreqLinks":[151],"description":"","title":""},{"courseId":"18753","treeType":"OR","nodeId":109,"isStarter":true,"prereqIndices":[20],"postreqIndices":[],"prereqLinks":[152],"postreqLinks":[],"description":"The first half of the course comprises of the concepts of entropy, mutual information, the Asymptotic Equipartition property, applications to source coding (data compression), applications to channel capacity (channel coding), differential entropy and its application to waveform channel capacities, and a subset of advanced topics such as network information theory, or rate-distortion theory, as time permits. The second half of the course comprises finite-field algebra, Hamming codes, cyclic codes (CRC and BCH codes), a brief introduction to Reed-Solomon codes, and perhaps universal codes (Lempel-Ziv coding). Prerequisites: 36-217 and senior or graduate standing.","title":"Information Theory"},{"courseId":"18759","treeType":"OR","nodeId":110,"isStarter":true,"prereqIndices":[111,99],"postreqIndices":[],"prereqLinks":[155,156],"postreqLinks":[],"description":"Wireless networks and wireless communications technology have the potential to make universal Internet use a reality, which will clearly lead to global connectivity, roaming, and ubiquitous communications. Given the astonishing increase in the number of Internet users (doubling every 90 days), this course aims to examine the relationship between the Internet and wireless networks. To that end, the emerging third generation (3G) wireless standards and how they accommodate data communications in addition to voice will be highlighted. While the emphasis will be on the networking issues and aspects of wireless communication networks, the relevant physical issues will briefly be reviewed as well. In addition, this year we will cover two hot topics as well: ad hoc wireless networks and ultra-wideband radio technology. The expectation is that the students completing this course will have a good idea about the role of wireless networks in the internet-centric future telecommunication networks. In addition, the course targets to train the students with the necessary set of skills (both analytical and qualitative) to do research on wireless networks. Prerequisites: (18-345 or 15-441) and 18-396 and (36-217 or 36-225 or 36-325)","title":"Wireless Networks"},{"courseId":"","treeType":"OR","nodeId":111,"isStarter":true,"prereqIndices":[112,18],"postreqIndices":[110],"prereqLinks":[153,154],"postreqLinks":[155]},{"courseId":"15441","treeType":"OR","nodeId":112,"isStarter":true,"prereqIndices":[],"postreqIndices":[111],"prereqLinks":[],"postreqLinks":[153],"description":"","title":""},{"courseId":"18760","treeType":"OR","nodeId":113,"isStarter":true,"prereqIndices":[114,12,33],"postreqIndices":[],"prereqLinks":[157,158,159],"postreqLinks":[],"description":"A large digital integrated circuit (IC) may require 100,000 lines of high-level description in a hardware modeling language, which then turns into 1,000,000 logic gates, which ultimately end up as 100 million polygons on the masks that define the IC. This course opens up the important CAD tools that perform the many steps of the transformation from Boolean equations to masks. We focus on mathematical models, algorithms, and data structures. We will write programs for simple versions of these tools. We will look at, and experiment with, a few real tools. We begin with a review of Boolean algebra, but from a computational viewpoint you don\u0027t see when you do Karnaugh maps by hand. We then move on to look at synthesis tools for 2-level and multi-level logic, that transform Boolean equations and finite state machine descriptions into optimized logic, and verification tools that decide whether the logic you built does the same thing as the specification you started with. We look at geometric layout synthesis tools for component partitioning, placement, and wire routing.We look at geometric layout verification tools that decide if you satisfied the manufacturing design rules, that extract back the circuit from all those polygons. Course grade is based on homework assignments (about 5-6), paper reviews (2), and projects (1-2 smaller warm-up projects, and then 1 significant group design project that allows creative input from the students.) 4 hrs. lec. Prerequisites: 18-240, 15-211 and 18-322 and senior or graduate standing.","title":"VLSI CAD: Logic to Layout"},{"courseId":"15214","treeType":"OR","nodeId":114,"isStarter":true,"prereqIndices":[],"postreqIndices":[113,116],"prereqLinks":[],"postreqLinks":[157,161],"description":"","title":""},{"courseId":"18764","treeType":"OR","nodeId":115,"isStarter":true,"prereqIndices":[33],"postreqIndices":[],"prereqLinks":[160],"postreqLinks":[],"description":"This course will provide the necessary background for the state-of-the art technologies utilized by the leading edge products covering full spectrum of market drivers from mobile platforms, microprocessors, game chips to the highest performance systems for enterprise solutions computing. We will cover the current planar CMOS technology generations as well as 3-dimensional FinFET device architectures. We will present all key components of such systems, i.e., logic, analog/RF and embedded memories (SRAM, DRAM and Flash). We will also cover the commodity DRAM and Flash memories (NOR and NAND). We will overview the underlying technology solutions, circuit design all the way to high level specifications including performance, power, area/form factors and cost. We will review architecture and technology solutions for all product classes described above. Then we present the technology roadmap for the upcoming generations in terms of device architecture options for logic devices (FinFET, Nanowire and Tunnel FET) and memories (Phase Change Memory , Resistive RAM and Magnetic RAM/Spin-Transfer Torque RAM) from the device level all the way to the system level specifications. The last part of the class will be devoted to the system integration issues, namely 3-dimensional integration approaches. We will cover the current SIP solutions and then focus on the interposer and Through Silicon Via (TSV) techniques covering such aspect as technology integration, power, performance, yield, cost and reliability. Prerequisites: 18-322 or 18-525, and senior or graduate standing.","title":"Technology Foundations and Roadmap for System on Chip and System in Package Prod"},{"courseId":"18765","treeType":"OR","nodeId":116,"isStarter":true,"prereqIndices":[114,12,117],"postreqIndices":[],"prereqLinks":[161,162,165],"postreqLinks":[],"description":"For this course, time- and topic-indexed videos of lecture, homework, projects, etc. will be available from the online learning portal/website. In addition to these resources, two 1-hour live sessions are scheduled per week for recitation. Each student is strongly urged to attend one of these two sessions each week, either remotely or in the classroom on the Carnegie-Mellon Pittsburgh campus. This course examines in depth the theory and practice of fault analysis, test generation, and design for testability for digital ICs and systems. The topics to be covered include circuit and system modeling; fault sources and types; the single stuck-line (SSL), delay, and functional fault models; fault simulation methods; automatic test pattern generation (ATPG) algorithms for combinational and sequential circuits, including the D-algorithm, PODEM, FAN, and the genetic algorithm; testability measures; design-for-testability; scan design; test compression methods; logic-level diagnosis; built-in self-testing (BIST); VLSI testing issues; and processor and memory testing. Advance research issues, including topics on MEMS and mixed-signal testing are also discussed. 4 hours of lecture per week Prerequisites: 18-240 and 15-211 and (18-340 or 18-341) Senior or graduate standing required.","title":"Digital System Testing and Testable Design"},{"courseId":"","treeType":"OR","nodeId":117,"isStarter":true,"prereqIndices":[41,17],"postreqIndices":[116],"prereqLinks":[163,164],"postreqLinks":[165]},{"courseId":"18791","treeType":"OR","nodeId":118,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"Students will gain theoretical and practical skills in medical image analysis, including skills relevant to general image analysis. The fundamentals of computational medical image analysis will be explored, leading to current research in applying geometry and statistics to segmentation, registration, visualization, and image understanding. Student will develop practical experience through projects using the National Library of Medicine Insight Toolkit ( ITK ), a popular open-source software library developed by a consortium of institutions including Carnegie Mellon University and the University of Pittsburgh. In addition to image analysis, the course will include interaction with clinicians at UPMC. It is possible that a few class lectures may be videoed for public distribution. Prerequisites: Knowledge of vector calculus, basic probability, and either C++ or python. Required textbook, \u0026quot;Machine Vision\u0026quot;, ISBN: 052116981X; Optional textbook, \u0026quot;Insight to Images\u0026quot;, ISBN: 9781568812175.","title":"Methods in Medical Image Analysis"},{"courseId":"18795","treeType":"OR","nodeId":119,"isStarter":true,"prereqIndices":[14],"postreqIndices":[],"prereqLinks":[166],"postreqLinks":[],"description":"Bioimage Informatics (formerly Bioimaging) 12 units This course gives an overview of tools and tasks in various biological and biomedical imaging modalities, such as fluorescence microscopy, electron microscopy, magnetic resonance imaging, ultrasound and others. The major focus will be on automating and solving the fundamental tasks required for interpreting these images, including (but not restricted to) deconvolution, registration, segmentation, pattern recognition, and modeling, as well as tools needed to solve those tasks (such as Fourier and wavelet methods). The discussion of these topics will draw on approaches from many fields, including statistics, signal processing, and machine learning. As part of the course, students will be expected to complete an independent project. Prerequisites: 18-396 Signals and Systems","title":"Bioimage Informatics"},{"courseId":"18799","treeType":"OR","nodeId":120,"isStarter":true,"prereqIndices":[14],"postreqIndices":[],"prereqLinks":[167],"postreqLinks":[],"description":"Please go to the ECE Website to view \u0026quot;Special Topics in Signal Processing\u0026quot; course descriptions. http://www.ece.cmu.edu/courses/index.html","title":"Special Topics in Signal Processing"},{"courseId":"18819","treeType":"OR","nodeId":121,"isStarter":true,"prereqIndices":[9],"postreqIndices":[],"prereqLinks":[168],"postreqLinks":[],"description":"Please go the the ECE Website to view \u0026quot;Special Topics in Applied Physics\u0026quot; course descriptions. http://www.ece.cmu.edu/courses/index.html","title":"Special Topics in Applied Physics"},{"courseId":"18842","treeType":"OR","nodeId":122,"isStarter":true,"prereqIndices":[123,127],"postreqIndices":[],"prereqLinks":[175,179],"postreqLinks":[],"description":"The primary objective is to learn the fundamental principles underlying distributed systems, and apply some of this knowledge in developing a real system in a course project (such as a networked multimedia system or a groupware system with built-in mechanisms for supporting high availability). Topics include: models of distributed systems, distributed transactions, distributed filesystems, infrastructures for building distributed systems, distributed algorithms, cryptography and distributed security, an overview of distributed multimedia applications, systems and networking support for distributed multimedia systems, and distributed real-time systems. An intensive hands-on semester-long group project will be carried out to complement the concepts taught in the course.","title":"Distributed Systems"},{"courseId":"","treeType":"OR","nodeId":123,"isStarter":true,"prereqIndices":[64,124,125,126,23,42],"postreqIndices":[122],"prereqLinks":[169,170,171,172,173,174],"postreqLinks":[175]},{"courseId":"15412","treeType":"OR","nodeId":124,"isStarter":true,"prereqIndices":[],"postreqIndices":[123],"prereqLinks":[],"postreqLinks":[170],"description":"","title":""},{"courseId":"14342","treeType":"OR","nodeId":125,"isStarter":true,"prereqIndices":[],"postreqIndices":[123],"prereqLinks":[],"postreqLinks":[171],"description":"","title":""},{"courseId":"18342","treeType":"OR","nodeId":126,"isStarter":true,"prereqIndices":[],"postreqIndices":[123],"prereqLinks":[],"postreqLinks":[172],"description":"","title":""},{"courseId":"","treeType":"OR","nodeId":127,"isStarter":true,"prereqIndices":[18,128,129],"postreqIndices":[122],"prereqLinks":[176,177,178],"postreqLinks":[179]},{"courseId":"18756","treeType":"OR","nodeId":128,"isStarter":true,"prereqIndices":[],"postreqIndices":[127],"prereqLinks":[],"postreqLinks":[177],"description":"","title":""},{"courseId":"14740","treeType":"OR","nodeId":129,"isStarter":true,"prereqIndices":[],"postreqIndices":[127],"prereqLinks":[],"postreqLinks":[178],"description":"","title":""},{"courseId":"18843","treeType":"OR","nodeId":130,"isStarter":true,"prereqIndices":[64],"postreqIndices":[],"prereqLinks":[180],"postreqLinks":[],"description":"This is a course exploring research issues in the newly emerging field of mobile computing. Many traditional areas of computer science and computer engineering are impacted by the constraints and demands of mobility. Examples include network protocols, power management, user interfaces, file access, ergonomics, and security. This will be an \u0026quot;advanced\u0026quot; course in the truest sense --- most, if not all, the topics discussed will be ones where there is little consensus in the research community on the best approaches. The course will also offer significant \u0026quot;hand-on\u0026quot; experience in this area. Each student will have to present and lead the discussion on a number of papers. Students will work in groups of three under the guidance of a mentor on a hands-on project. Each student will also be required to write one of two documents: (a) a research proposal (similar in spirit to an NSF proposal) on an idea in mobile computing or (b) a short business plan for a commercial opportunity in mobile computing. Grading will be based on the quality of the presentations, the project, and the proposal or business plan. Prerequisites: 15-410 and senior or graduate standing.","title":"Mobile and Pervasive Computing"},{"courseId":"18845","treeType":"OR","nodeId":131,"isStarter":true,"prereqIndices":[7],"postreqIndices":[],"prereqLinks":[181],"postreqLinks":[],"description":"This course investigates the issues involved in providing scalable and highly available network services over the best-effort Internet. Examples of such services include Web servers, application servers, search engines, proxy caches, online auction systems, and remote visualization. Topics include network programming, server design, clustering, caching, proxies, remote execution, resource naming, discovery, and monitoring, and wide-area metacomputing. The course consists of lectures on existing technology, student presentations of research papers, and a project where students design and implement a significant network service. Prerequisites: 15-410 or 15-412 or 15-441, and senior or graduate standing.","title":"Internet Services"},{"courseId":"18869","treeType":"OR","nodeId":132,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"Section D: Wild \u0026amp; Crazy Ideas in Electrical and Computer Engineering For a full course description please refer to the following webpage http://www.ece.cmu.edu/courses/18869D","title":"Special Topics in CAD"},{"courseId":"18875","treeType":"OR","nodeId":133,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"The course has two parts. The first part introduces basic components and networks used in the electric power industry. This is followed by systematic modeling of these components, as well as of the entire system. Methods for modeling and analyzing both system equilibria and dynamics are presented. Simulations and lab demos are given to simulate and analyze typical system blackouts. This is followed by introducing decision and control methods for preventing these problems, as well as for managing the system more reliably, securely and efficiently over broad ranges of its operating conditions. The emphasis is on IT, software and control (both distributed and coordination) for achieving pre-specified system performance. This part of the course will involve simulation demos and hands on studies in which students create their own power network, simulate it and assess for performance. The second part of the course will review the industry structure, the experience with deregulatio n, and economic issues concerning choice of generating fuel and technology, the costs of blackouts, and environmental discharges. The course will integrate engineering and economic aspects to examine the design, investment, and operations that satisfy public desires for low cost, nonpolluting, reliable, and secure power. Knowledge of basic electric circuits and/or basic economics is assumed. 3 hrs. lec., 1 hr. rec. Prerequisites: Basic electric circuits and/or basic economics and at least graduate standing.","title":"Engineering and Economics of Electric Energy Systems"},{"courseId":"18879","treeType":"OR","nodeId":134,"isStarter":true,"prereqIndices":[135,47,136],"postreqIndices":[],"prereqLinks":[182,183,184],"postreqLinks":[],"description":"Please go to the ECE Website to view \u0026quot;Special Topics in Systems and Controls\u0026quot; course descriptions. http://www.ece.cmu.edu/courses/index.html","title":"Special Topics in Systems and Controls"},{"courseId":"18470","treeType":"OR","nodeId":135,"isStarter":true,"prereqIndices":[],"postreqIndices":[134],"prereqLinks":[],"postreqLinks":[182],"description":"","title":""},{"courseId":"18372","treeType":"OR","nodeId":136,"isStarter":true,"prereqIndices":[],"postreqIndices":[134],"prereqLinks":[],"postreqLinks":[184],"description":"","title":""},{"courseId":"18902","treeType":"OR","nodeId":137,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"","title":"Graduate Seminar"},{"courseId":"18980","treeType":"OR","nodeId":138,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"","title":"M.S. Graduate Project"},{"courseId":"18984","treeType":"OR","nodeId":139,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"Full-time IMB students with graduate standing can apply to be IMB Teaching Assistants. IMB TAs work 10 hours a week and receive partial tuition reimbursement. MS IMB students must complete the online TA application to be considered for a position. See http://www.ece.cmu.edu/student/teaching.html for further information about the IMB TA program.","title":"M.S. Teaching Assistantship"},{"courseId":"18990","treeType":"OR","nodeId":140,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"","title":"Reading and Research"},{"courseId":"18992","treeType":"OR","nodeId":141,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"Two semesters of Teaching Internship are required for the ECE Ph.D. program. Ph.D. students or M.S. students who intend to pursue a Ph.D. are eligible for the TI. Students should obtain their advisor\u0027s permission prior to applying for the TI. Students must complete the online TA application to be considered for a position. TIs are assigned to work 10 hours per week. Registration of 12 units is required for each semester of teaching. See http://www.ece.cmu.edu/student/teaching.html for further information about applying for a teaching internship position.","title":"ECE Graduate Teaching Internship"},{"courseId":"18994","treeType":"OR","nodeId":142,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"","title":"Internship"},{"courseId":"18995","treeType":"OR","nodeId":143,"isStarter":true,"prereqIndices":[],"postreqIndices":[],"prereqLinks":[],"postreqLinks":[],"description":"","title":"Practicum in Electrical and Computer Engineering"},]

var initLinks = [{"source":1,"target":2},{"source":3,"target":4},{"source":3,"target":5},{"source":3,"target":6},{"source":7,"target":8},{"source":9,"target":1},{"source":9,"target":3},{"source":9,"target":10},{"source":12,"target":1},{"source":12,"target":13},{"source":14,"target":1},{"source":14,"target":3},{"source":15,"target":9},{"source":17,"target":12},{"source":19,"target":20},{"source":19,"target":21},{"source":19,"target":22},{"source":18,"target":19},{"source":18,"target":7},{"source":23,"target":12},{"source":23,"target":7},{"source":25,"target":26},{"source":27,"target":28},{"source":27,"target":2},{"source":27,"target":4},{"source":27,"target":29},{"source":27,"target":30},{"source":31,"target":9},{"source":32,"target":14},{"source":32,"target":33},{"source":34,"target":12},{"source":34,"target":33},{"source":36,"target":12},{"source":37,"target":38},{"source":37,"target":7},{"source":37,"target":39},{"source":36,"target":37},{"source":40,"target":17},{"source":40,"target":41},{"source":40,"target":23},{"source":40,"target":42},{"source":40,"target":33},{"source":36,"target":40},{"source":44,"target":38},{"source":44,"target":39},{"source":43,"target":44},{"source":45,"target":46},{"source":45,"target":47},{"source":43,"target":45},{"source":48,"target":49},{"source":50,"target":14},{"source":52,"target":26},{"source":52,"target":33},{"source":51,"target":52},{"source":53,"target":26},{"source":53,"target":50},{"source":51,"target":53},{"source":54,"target":15},{"source":54,"target":33},{"source":51,"target":54},{"source":55,"target":15},{"source":55,"target":50},{"source":51,"target":55},{"source":56,"target":50},{"source":56,"target":33},{"source":51,"target":56},{"source":57,"target":26},{"source":57,"target":32},{"source":51,"target":57},{"source":58,"target":15},{"source":58,"target":32},{"source":51,"target":58},{"source":60,"target":33},{"source":60,"target":47},{"source":60,"target":50},{"source":59,"target":60},{"source":61,"target":17},{"source":61,"target":41},{"source":61,"target":23},{"source":61,"target":42},{"source":59,"target":61},{"source":63,"target":33},{"source":63,"target":47},{"source":63,"target":50},{"source":63,"target":36},{"source":63,"target":64},{"source":62,"target":63},{"source":65,"target":23},{"source":65,"target":42},{"source":62,"target":65},{"source":66,"target":50},{"source":67,"target":47},{"source":67,"target":68},{"source":67,"target":23},{"source":67,"target":42},{"source":66,"target":67},{"source":70,"target":23},{"source":70,"target":33},{"source":69,"target":70},{"source":71,"target":23},{"source":71,"target":72},{"source":69,"target":71},{"source":73,"target":47},{"source":73,"target":23},{"source":69,"target":73},{"source":74,"target":42},{"source":74,"target":47},{"source":69,"target":74},{"source":75,"target":42},{"source":75,"target":72},{"source":69,"target":75},{"source":76,"target":42},{"source":76,"target":33},{"source":69,"target":76},{"source":77,"target":47},{"source":77,"target":33},{"source":69,"target":77},{"source":80,"target":15},{"source":81,"target":15},{"source":84,"target":36},{"source":88,"target":89},{"source":90,"target":91},{"source":90,"target":92},{"source":93,"target":92},{"source":94,"target":92},{"source":95,"target":92},{"source":97,"target":23},{"source":97,"target":33},{"source":96,"target":97},{"source":98,"target":23},{"source":98,"target":99},{"source":96,"target":98},{"source":100,"target":42},{"source":100,"target":33},{"source":96,"target":100},{"source":101,"target":42},{"source":101,"target":99},{"source":96,"target":101},{"source":102,"target":33},{"source":102,"target":99},{"source":96,"target":102},{"source":103,"target":33},{"source":103,"target":17},{"source":96,"target":103},{"source":104,"target":33},{"source":104,"target":41},{"source":96,"target":104},{"source":105,"target":7},{"source":106,"target":23},{"source":106,"target":42},{"source":106,"target":64},{"source":107,"target":108},{"source":109,"target":20},{"source":111,"target":112},{"source":111,"target":18},{"source":110,"target":111},{"source":110,"target":99},{"source":113,"target":114},{"source":113,"target":12},{"source":113,"target":33},{"source":115,"target":33},{"source":116,"target":114},{"source":116,"target":12},{"source":117,"target":41},{"source":117,"target":17},{"source":116,"target":117},{"source":119,"target":14},{"source":120,"target":14},{"source":121,"target":9},{"source":123,"target":64},{"source":123,"target":124},{"source":123,"target":125},{"source":123,"target":126},{"source":123,"target":23},{"source":123,"target":42},{"source":122,"target":123},{"source":127,"target":18},{"source":127,"target":128},{"source":127,"target":129},{"source":122,"target":127},{"source":130,"target":64},{"source":131,"target":7},{"source":134,"target":135},{"source":134,"target":47},{"source":134,"target":136}]
var WIDTH = window.innerWidth,
    HEIGHT = window.innerHeight,
    DESELECTED_RADIUS = 10,
    SELECTED_RADIUS = 30,
    SELECTED_DX = 24,
    DESELECTED_DX = 12,
    SELECTED_FONT_SIZE = "18px",
    DESELECTED_FONT_SIZE = "5px",
    DESELECTED_TEXT_Y = ".35em",
    fill = d3.scale.category20();
/*var WIDTH = 960,
	HEIGHT = 500;*/

// mouse event vars
var selectedNodeObj = null;
var selectedNodeDOMObject = null;

// init svg
var outer = d3.select("#chart")
  .append("svg")
    .attr("width", WIDTH)
    .attr("height", HEIGHT)
    .attr("pointer-events", "all");

//defines what arrowhead looks like
outer.append('svg:defs').append('svg:marker')
    .attr('id', 'start-arrow')
    .attr('viewBox', '0 -5 10 10')
    .attr('refX', 4)
    .attr('markerWidth', 3)
    .attr('markerHeight', 3)
    .attr('orient', 'auto')
  .append('svg:path')
    .attr('d', 'M10,-5L0,0L10,5')
    .attr('fill', '#000');

//
var vis = outer
 	.append('g')
 	//special transform...
 	.attr("transform", "translate(" + WIDTH / 2 + "," + HEIGHT / 2 + ")")
    .call(d3.behavior.zoom()
    .scaleExtent([.5,10])	//limits zooming
    .on("zoom", rescale))
    .on("dblclick.zoom", null)
  	.append('svg:g');

  	
//creates the background
vis.append('svg:rect')
	.attr("class","overlay")
	.attr("x",-WIDTH/2)
	.attr("y", -HEIGHT/2)
    .attr('width', WIDTH)
    .attr('height', HEIGHT)
    .attr('fill','white');

// init force layout
var force = d3.layout.force()
    .size([.75,.75])
    .nodes(initNodes)
    .links(initLinks)
    .linkDistance(3)
    .linkStrength(1)
    .charge(-1000)
    .gravity(1)
//    .size([WIDTH*=.5, HEIGHT *= .5])
    .on("tick", tick);

// get layout properties
var nodes = force.nodes(),
    links = force.links();

//makes arrow heads
var link = vis.selectAll(".link").data(links)
    .enter().insert("svg:path")
    .attr("class", "link")
    .style('marker-start', 'url(#start-arrow)')

var node = vis.selectAll(".node").data(nodes)
    .enter().append("g")
    .attr("class", "node")
    .on("click", function(d){return selectNode(d,this);});
node.append("circle")
    .attr("r", DESELECTED_RADIUS)
node.append("text")
    .attr("dx", -.75*DESELECTED_RADIUS)
    .attr("dy", ".35em")
    .text(function(d) {
      if (d.courseId.length > 0)
      {
        return d.courseId;
      } else {
        return (d.treeType === "AND") ? "\u00a0\u00a0& &" : "\u00a0\u00a0\u00a0| |";
      }
    })

force.start();
function tick() {
  link.attr("x1", function(d) { return d.source.x; })
      .attr("y1", function(d) { return d.source.y; })
      .attr("x2", function(d) { return d.target.x; })
      .attr("y2", function(d) { return d.target.y; })
      .attr('d', function(d) {
        var deltaX = d.target.x - d.source.x,
        deltaY = d.target.y - d.source.y,
        dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY),
        normX = deltaX / dist,
        normY = deltaY / dist,
        sourcePadding = (this.getAttribute("class") == "link prereqLink") ? 
            (SELECTED_RADIUS + 5):(DESELECTED_RADIUS + 5),
        targetPadding = 0,
        sourceX = d.source.x + (sourcePadding * normX),
        sourceY = d.source.y + (sourcePadding * normY),
        targetX = d.target.x - (targetPadding * normX),
        targetY = d.target.y - (targetPadding * normY);
        return 'M' + sourceX + ',' + sourceY + 'L' + targetX + ',' + targetY;
      });
      
  node.attr("transform",
      function(d,i) {return "translate(" + d.x + ", " + d.y + ")"});
}

// pan and scale
function rescale() {
  trans=d3.event.translate;
  scale=d3.event.scale;

  // keep in screen
  trans[0] = Math.min(WIDTH / 2 * (scale - 1), Math.max(WIDTH / 2 * (1 - scale), trans[0]));
  trans[1] = Math.min(HEIGHT / 2 * (scale - 1) + 230 * scale, Math.max(HEIGHT / 2 * (1 - scale) - 230 * scale, trans[1]));

  vis.attr("transform",
      "translate(" + trans + ")"
      + " scale(" + scale + ")");
 // d3.layout.force().charge().translate(trans).scale(scale);
  d3.behavior.zoom().translate(trans);
}

function selectNode(d, nodeDOMObject) {
  if (d == selectedNodeObj) {
    deselect();
  }
  else {
    if (selectedNodeObj)
      deselect();
    selectedNodeObj = d;
    selectedNodeDOMObject = nodeDOMObject;
    d3.select(nodeDOMObject).select("circle").transition()
      .duration(750)
      .attr("r", SELECTED_RADIUS);
    d3.select(nodeDOMObject).select("text").transition()
    	.duration(750)
    	.attr("dx",-.8*SELECTED_RADIUS)
    	.style("font-size",SELECTED_FONT_SIZE)
    	.style("fill","#222")
    	.style("stroke", "#222");
    d.prereqIndices.forEach(function(n){
      node[0][n].classList.add("prereqNode");
      if (nodes[n].courseId.length <= 0) {
        nodes[n].prereqIndices.forEach(function(z){
          node[0][z].classList.add("prereqNode");
        });
      }
    });
    d.prereqLinks.forEach(function(n){
      link[0][n].classList.add("prereqLink");
    });
    d.postreqIndices.forEach(function(n){
      node[0][n].classList.add("postreqNode");
      if (nodes[n].courseId.length <= 0) {
        nodes[n].postreqIndices.forEach(function(z){
          node[0][z].classList.add("postreqNode");
        });
      }
    });
    d.postreqLinks.forEach(function(n){
      link[0][n].classList.add("postreqLink");
    });
    node.classed("nodeSelected", function(d) {
      return d === selectedNodeObj; });
  }
  tick();
}

function deselect() {
  d3.select(selectedNodeDOMObject).select("circle").transition()
    .duration(750)
    .attr("r", DESELECTED_RADIUS);
  d3.select(selectedNodeDOMObject).select("text").transition()
    .duration(750)
    .attr("dx",-.75*DESELECTED_RADIUS)
    .style("font-size",DESELECTED_FONT_SIZE)
    .style("fill", "#FFF")
    .style("stroke","none");
  node.classed("nodeSelected", function(d) {
    return d === selectedNodeObj; });
  selectedNodeObj = null;
  selectedNodeDOMObject = null;
  node.classed("nodeSelected", false);
  node.classed("prereqNode", false);
  node.classed("postreqNode", false);
  link.classed("prereqLink", false);
  link.classed("postreqLink", false);
  tick();
}
